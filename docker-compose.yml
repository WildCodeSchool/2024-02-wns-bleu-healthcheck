services:
    backend:
        build: ./backend
        volumes:
            - ./backend/src:/app/src
            - /app/node_modules
        environment:
            - CHOKIDAR_USEPOLLING=true
        env_file:
            - .env
        healthcheck:
            test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
            interval: 1s
            timeout: 2s
            retries: 30
        depends_on:
            db:
                condition: service_healthy
    frontend:
        build: ./frontend
        volumes:
            - ./frontend/src:/app/src
            - /app/node_modules
        environment:
            - CHOKIDAR_USEPOLLING=true            
        depends_on:
            backend:
                condition: service_healthy
        healthcheck:
            test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
            interval: 1s
            timeout: 2s
            retries: 30
    db:
        image: postgres
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
            interval: 1s
            timeout: 2s
            retries: 30
        environment:
            POSTGRES_PASSWORD: password
    adminer:
        image: adminer
    apigateway:
        image: nginx
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            backend:
                condition: service_healthy
            frontend:
                condition: service_healthy
        ports:
            - 7001:80
